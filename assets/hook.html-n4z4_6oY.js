import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as c,c as i,a as n,b as s,d as t,f as p}from"./app-HHaGRXeI.js";const l={},u=n("h1",{id:"hook",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hook","aria-hidden":"true"},"#"),s(" Hook")],-1),k=n("blockquote",null,[n("p",null,"Hook，英文直译是”钩子“的意思。在程序中将其理解为”劫持“可能会更好理解，我们可以通过hook技术来劫持某个对象，从而控制它与其他对象的交互。")],-1),r={href:"https://www.jianshu.com/p/3382cc765b39",target:"_blank",rel:"noopener noreferrer"},d=n("h2",{id:"hook技术分类",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hook技术分类","aria-hidden":"true"},"#"),s(" Hook技术分类")],-1),v=n("li",null,[n("p",null,[n("strong",null,"根据Hook的API语言划分，分为Hook Java和Hook Native。")]),n("ul",null,[n("li",null,[n("p",null,"Hook Java主要通过反射和代理来实现，用于在SDK开发环境中修改Java代码。")]),n("li",null,[n("p",null,"Hook Native则应用于在NDK开发环境和系统开发中修改Native代码。")])])],-1),m={href:"https://www.zhihu.com/search?q=%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%BF%9B%E7%A8%8BHoo&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A55276265%7D",target:"_blank",rel:"noopener noreferrer"},b=n("li",null,[n("p",null,"应用程序进程Hook只能Hook当前所在的应用程序进程。")],-1),y={href:"https://www.zhihu.com/search?q=%E5%85%A8%E5%B1%80Hoo&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A55276265%7D",target:"_blank",rel:"noopener noreferrer"},h=n("li",null,[n("p",null,[n("strong",null,"根据Hook的实现方式划分，分为如下两种：")]),n("ul",null,[n("li",null,[n("p",null,"通过反射和代理实现，只能Hook当前的应用程序进程。")]),n("li",null,[n("p",null,"通过Hook框架实现，比如Xposed，可以实现全局Hook，但是需要root。")])])],-1),w=n("h2",{id:"hook原理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#hook原理","aria-hidden":"true"},"#"),s(" Hook原理")],-1),g={href:"https://www.zhihu.com/search?q=%E8%BF%94%E5%9B%9E%E5%80%BC&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A55276265%7D",target:"_blank",rel:"noopener noreferrer"},f=p(`<p>正常的调用和返回：</p><figure><img src="https://raw.githubusercontent.com/ET-yzk/picgo/blog/202112021954211.jpeg" alt="img" tabindex="0"><figcaption>img</figcaption></figure><p>Hook的调用和返回：</p><figure><img src="https://raw.githubusercontent.com/ET-yzk/picgo/blog/202112021954154.jpeg" alt="img" tabindex="0"><figcaption>img</figcaption></figure><h2 id="hook的过程" tabindex="-1"><a class="header-anchor" href="#hook的过程" aria-hidden="true">#</a> Hook的过程</h2><blockquote><p>Step1. 寻找Hook点，原则是<code>静态变量</code>或者<code>单例对象</code>，尽量Hook <code>public</code>的对象和方法，非public不保证每个版本都一样，需要适配。</p><p>Step2. 选择合适的代理方式，如果是<code>接口</code>可以用<code>动态代理</code>；如果是类可以用<code>静态代理</code>。 Step3. 偷梁换柱——用代理对象替换原始对象。</p></blockquote><h2 id="hook-activity的startactivity" tabindex="-1"><a class="header-anchor" href="#hook-activity的startactivity" aria-hidden="true">#</a> Hook Activity的startActivity</h2><p><strong>寻找Hook点</strong>：</p><p>Activity的 startActivity 方法的调用链：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// android/app/Activity.java</span>

<span class="token comment">// Step1</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Step2</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> intent<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">startActivityForResult</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// Step3</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startActivityForResult</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequiresPermission</span> <span class="token class-name">Intent</span> intent<span class="token punctuation">,</span> <span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Bundle</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>mParent <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        options <span class="token operator">=</span> <span class="token function">transferSpringboardActivityOptions</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Hook点</span>
        <span class="token class-name">Instrumentation<span class="token punctuation">.</span>ActivityResult</span> ar <span class="token operator">=</span> mInstrumentation<span class="token punctuation">.</span><span class="token function">execStartActivity</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> mMainThread<span class="token punctuation">.</span><span class="token function">getApplicationThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mToken<span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">,</span> intent<span class="token punctuation">,</span> requestCode<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>ar <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mMainThread<span class="token punctuation">.</span><span class="token function">sendActivityResult</span><span class="token punctuation">(</span>mToken<span class="token punctuation">,</span> mEmbeddedID<span class="token punctuation">,</span> requestCode<span class="token punctuation">,</span> ar<span class="token punctuation">.</span><span class="token function">getResultCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> ar<span class="token punctuation">.</span><span class="token function">getResultData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>requestCode <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mStartedActivity <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token function">cancelInputsAndStartExitTransition</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>options <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            mParent<span class="token punctuation">.</span><span class="token function">startActivityFromChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> intent<span class="token punctuation">,</span> requestCode<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            mParent<span class="token punctuation">.</span><span class="token function">startActivityFromChild</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> intent<span class="token punctuation">,</span> requestCode<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Hook点分析</strong>：</p>`,11),A=n("code",null,"mInstrumentation",-1),I=n("code",null,"mInstrumentation",-1),_={href:"https://www.zhihu.com/search?q=%E6%88%90%E5%91%98%E5%8F%98%E9%87%8F&search_source=Entity&hybrid_search_source=Entity&hybrid_search_extra=%7B%22sourceType%22%3A%22article%22%2C%22sourceId%22%3A55276265%7D",target:"_blank",rel:"noopener noreferrer"},x=p(`<p><strong>Hook代码</strong>：</p><p>代理类：InstrumentationProxy.java</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 1. InstrumentationProxy继承Instrumentation
 * 2. InstrumentationProxy持有Instrumentation实例的引用
 * 3. 实现execStartActivity方法，并在内部通过反射调用Instrumentation的execStartActivity方法
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">InstrumentationProxy</span> <span class="token keyword">extends</span> <span class="token class-name">Instrumentation</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TAG</span> <span class="token operator">=</span> <span class="token string">&quot;InstrumentationProxy&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Instrumentation</span>的 mInstrumentation<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">InstrumentationProxy</span><span class="token punctuation">(</span><span class="token class-name">Instrumentation</span> instrumentation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        mInstrumentation <span class="token operator">=</span> instrumentation<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">ActivityResult</span> <span class="token function">execStartActivity</span><span class="token punctuation">(</span><span class="token class-name">Context</span> who<span class="token punctuation">,</span> <span class="token class-name">IBinder</span> contextThread<span class="token punctuation">,</span> <span class="token class-name">IBinder</span> token<span class="token punctuation">,</span> <span class="token class-name">Activity</span> target<span class="token punctuation">,</span>
            <span class="token class-name">Intent</span> intent<span class="token punctuation">,</span> <span class="token keyword">int</span> requestCode<span class="token punctuation">,</span> <span class="token class-name">Bundle</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token class-name">Log</span><span class="token punctuation">.</span><span class="token function">i</span><span class="token punctuation">(</span><span class="token constant">TAG</span><span class="token punctuation">,</span> <span class="token string">&quot;Hook成功&quot;</span> <span class="token operator">+</span> <span class="token string">&quot;--who:&quot;</span> <span class="token operator">+</span> who<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token class-name">Method</span> execStartActivityMethod <span class="token operator">=</span> <span class="token class-name">Instrumentation</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredMethod</span><span class="token punctuation">(</span><span class="token string">&quot;execStartActivity&quot;</span><span class="token punctuation">,</span>
                    <span class="token class-name">Context</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">IBinder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">IBinder</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Activity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
                    <span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">Bundle</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">ActivityResult</span><span class="token punctuation">)</span> execStartActivityMethod<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>mInstrumentation<span class="token punctuation">,</span> who<span class="token punctuation">,</span> contextThread<span class="token punctuation">,</span> token<span class="token punctuation">,</span> target<span class="token punctuation">,</span>
                    intent<span class="token punctuation">,</span> requestCode<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>用InstrumentationProxy来替换Instrumentation：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HookHelper</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hookActivityInstrumentation</span><span class="token punctuation">(</span><span class="token class-name">Activity</span> activity<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 得到Activity的mInstrumentation字段</span>
            <span class="token class-name">Field</span> field <span class="token operator">=</span> <span class="token class-name">Activity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;mInstrumentation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            field<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 得到Activity中的Instrumentation对象</span>
            <span class="token class-name">Instrumentation</span> instrumentation <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Instrumentation</span><span class="token punctuation">)</span> field<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>activity<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 创建InstrumentationProxy对象来代理Instrumentation对象</span>
            <span class="token class-name">InstrumentationProxy</span> instrumentationProxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InstrumentationProxy</span><span class="token punctuation">(</span>instrumentation<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 用代理去替换Activity中的Instrumentation对象</span>
            field<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>activity<span class="token punctuation">,</span> instrumentationProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchFieldException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行Hook</strong>:</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Hook</span>
        <span class="token class-name">HookHelper</span><span class="token punctuation">.</span><span class="token function">hookActivityInstrumentation</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">DetailActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token class-name">I</span><span class="token operator">/</span><span class="token class-name">InstrumentationProxy</span><span class="token operator">:</span> <span class="token class-name">Hook</span>成功<span class="token operator">--</span>who<span class="token operator">:</span><span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>xch168<span class="token punctuation">.</span>hooktest<span class="token punctuation">.</span></span>MainActivity</span><span class="token annotation punctuation">@bd3e1b1</span>
</code></pre></div><h2 id="hook-context的startactivity" tabindex="-1"><a class="header-anchor" href="#hook-context的startactivity" aria-hidden="true">#</a> Hook Context的startActivity</h2><blockquote><p>Context的实现类为ContextImpl。</p></blockquote><p><strong>寻找Hook点</strong>：</p><p>ContextImpl中startActivity的调用链：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// Step1</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> intent<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">warnIfCallingFromSystemProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Step2</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">startActivity</span><span class="token punctuation">(</span><span class="token class-name">Intent</span> intent<span class="token punctuation">,</span> <span class="token class-name">Bundle</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">warnIfCallingFromSystemProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">final</span> <span class="token keyword">int</span> targetSdkVersion <span class="token operator">=</span> <span class="token function">getApplicationInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>targetSdkVersion<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>intent<span class="token punctuation">.</span><span class="token function">getFlags</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token class-name">Intent</span><span class="token punctuation">.</span><span class="token constant">FLAG_ACTIVITY_NEW_TASK</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span>
            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>targetSdkVersion <span class="token operator">&lt;</span> <span class="token class-name">Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>N</span>
            <span class="token operator">||</span> targetSdkVersion <span class="token operator">&gt;=</span> <span class="token class-name">Build<span class="token punctuation">.</span>VERSION_CODES<span class="token punctuation">.</span>P</span><span class="token punctuation">)</span>
            <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>options <span class="token operator">==</span> <span class="token keyword">null</span>
            <span class="token operator">||</span> <span class="token class-name">ActivityOptions</span><span class="token punctuation">.</span><span class="token function">fromBundle</span><span class="token punctuation">(</span>options<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getLaunchTaskId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AndroidRuntimeException</span><span class="token punctuation">(</span>
                <span class="token string">&quot;Calling startActivity() from outside of an Activity &quot;</span>
                        <span class="token operator">+</span> <span class="token string">&quot; context requires the FLAG_ACTIVITY_NEW_TASK flag.&quot;</span>
                        <span class="token operator">+</span> <span class="token string">&quot; Is this really what you want?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// Hook点</span>
    mMainThread<span class="token punctuation">.</span><span class="token function">getInstrumentation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execStartActivity</span><span class="token punctuation">(</span><span class="token function">getOuterContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> mMainThread<span class="token punctuation">.</span><span class="token function">getApplicationThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">Activity</span><span class="token punctuation">)</span> <span class="token keyword">null</span><span class="token punctuation">,</span> intent<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Hook点分析</strong>:</p><ul><li>调用ActivityThread的getInstrumentation方法获取Instrumentation。</li><li>ActivityThread是主线程的管理类，Instrumentation是ActivityThread的成员变量，一个进程只有一个ActivityThread。</li><li>选择Instrumentation作为Hook点，通过代理类进行替换。</li></ul><p><strong>Hook代码</strong>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HookHelper</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">hookContextInstrumentation</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// 获取ActivityThread类</span>
            <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> activityThreadClass <span class="token operator">=</span> <span class="token class-name">Class</span><span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span><span class="token string">&quot;android.app.ActivityThread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 获取ActivityThread类中的静态变量sCurrentActivityThread</span>
            <span class="token class-name">Field</span> currentActivityThreadField <span class="token operator">=</span> activityThreadClass<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;sCurrentActivityThread&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            currentActivityThreadField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 获取sCurrentActivityThread字段的值，即ActivityThread的对象</span>
            <span class="token class-name">Object</span> currentActivityThread <span class="token operator">=</span> currentActivityThreadField<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 获取ActivityThread的mInstrumentation字段</span>
            <span class="token class-name">Field</span> mInstrumentationField <span class="token operator">=</span> activityThreadClass<span class="token punctuation">.</span><span class="token function">getDeclaredField</span><span class="token punctuation">(</span><span class="token string">&quot;mInstrumentation&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            mInstrumentationField<span class="token punctuation">.</span><span class="token function">setAccessible</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 获取mInstrumentation对象</span>
            <span class="token class-name">Instrumentation</span> instrumentation <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Instrumentation</span><span class="token punctuation">)</span> mInstrumentationField<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>currentActivityThread<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 创建Instrumentation的代理对象</span>
            <span class="token class-name">InstrumentationProxy</span> instrumentationProxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InstrumentationProxy</span><span class="token punctuation">(</span>instrumentation<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 用InstrumentationProxy替换ActivityThread中的Instrumentation</span>
            mInstrumentationField<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>currentActivityThread<span class="token punctuation">,</span> instrumentationProxy<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ClassNotFoundException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">NoSuchFieldException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IllegalAccessException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>执行Hook</strong>：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MainActivity</span> <span class="token keyword">extends</span> <span class="token class-name">Activity</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token class-name">Bundle</span> savedInstanceState<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">setContentView</span><span class="token punctuation">(</span><span class="token class-name">R</span><span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// Hook</span>
        <span class="token class-name">HookHelper</span><span class="token punctuation">.</span><span class="token function">hookContextInstrumentation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Intent</span> intent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Intent</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token class-name">DetailActivity</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">getApplicationContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行结果：</p><div class="language-java" data-ext="java"><pre class="language-java"><code><span class="token class-name">I</span><span class="token operator">/</span><span class="token class-name">InstrumentationProxy</span><span class="token operator">:</span> <span class="token class-name">Hook</span>成功<span class="token operator">--</span>who<span class="token operator">:</span><span class="token class-name"><span class="token namespace">android<span class="token punctuation">.</span>app<span class="token punctuation">.</span></span>Application</span><span class="token annotation punctuation">@7e13696</span>
</code></pre></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,23),H={href:"http://weishu.me/2016/01/28/understand-plugin-framework-proxy-hook/",target:"_blank",rel:"noopener noreferrer"},T={href:"https://blog.csdn.net/gdutxiaoxu/article/details/81459830",target:"_blank",rel:"noopener noreferrer"},C={href:"https://blog.csdn.net/gdutxiaoxu/article/details/81459910",target:"_blank",rel:"noopener noreferrer"},S={href:"https://www.jianshu.com/p/4f6d20076922",target:"_blank",rel:"noopener noreferrer"},E=n("li",null,"《Android进阶解密》",-1);function q(j,B){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,k,n("p",null,[s("导读："),n("a",r,[s("Hook 技术（一） - 简书 (jianshu.com)"),t(a)])]),d,n("ol",null,[v,n("li",null,[n("p",null,[n("strong",null,[s("根据Hook的进程划分，分为"),n("a",m,[s("应用程序进程Hook"),t(a)]),s("和全局Hook。")])]),n("ul",null,[b,n("li",null,[n("p",null,[s("应用程序进程是Zygote进程fork出来的，如果对Zygote进行Hook，就可以实现Hook系统所有的应用程序进程，这就是"),n("a",y,[s("全局Hoo"),t(a)]),s("k。")])])])]),h]),w,n("blockquote",null,[n("p",null,[s("创建一个代理对象，然后把原始对象替换为我们的代理对象，这样就可以在这个代理对象为所欲为，修改参数或替换"),n("a",g,[s("返回值"),t(a)]),s("。")])]),f,n("p",null,[s("当调用Activity的startActivity方法时，最后会调用"),A,s("的execStartActivity方法来完成Activity的开启，而"),I,s("是Activity的"),n("a",_,[s("成员变量"),t(a)]),s("，所以是一个很好的Hook点，用代理Instrumentation来替代原始的Instrumentation完成Hook。")]),x,n("ol",null,[n("li",null,[n("a",H,[s("Android插件化原理解析——Hook机制之动态代理"),t(a)])]),n("li",null,[n("a",T,[s("Android Hook 机制之简单实战"),t(a)])]),n("li",null,[n("a",C,[s("Android Hook Activity 的几种姿势"),t(a)])]),n("li",null,[n("a",S,[s("理解 Android Hook 技术以及简单实战"),t(a)])]),E])])}const N=e(l,[["render",q],["__file","hook.html.vue"]]);export{N as default};
