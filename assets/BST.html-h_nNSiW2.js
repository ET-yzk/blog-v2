import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as n,c as s,f as t}from"./app-HHaGRXeI.js";const o={},e=t(`<h1 id="二叉查找树-bst" tabindex="-1"><a class="header-anchor" href="#二叉查找树-bst" aria-hidden="true">#</a> 二叉查找树(BST)</h1><h3 id="定义" tabindex="-1"><a class="header-anchor" href="#定义" aria-hidden="true">#</a> 定义</h3><p>BST是满足如下3个条件的二叉树：</p><ol><li>若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值；</li><li>若它的右子树不空，则右子树上所有结点的值均大于它的根结点的值；</li><li>结点的左子树和右子树都是BST</li></ol><figure><img src="https://raw.githubusercontent.com/ET-yzk/picgo/blog/202203132246153.png" alt="" tabindex="0"><figcaption></figcaption></figure><h2 id="规律" tabindex="-1"><a class="header-anchor" href="#规律" aria-hidden="true">#</a> 规律</h2><ol><li>中序遍历将得到递增值</li></ol><div class="language-python" data-ext="py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">:</span>
    dfs<span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
    res <span class="token operator">=</span> root<span class="token punctuation">.</span>val
    dfs<span class="token punctuation">(</span>root<span class="token punctuation">.</span><span class="token punctuation">)</span>
</code></pre></div>`,8),c=[e];function p(i,l){return n(),s("div",null,c)}const d=a(o,[["render",p],["__file","BST.html.vue"]]);export{d as default};
