import{_ as a}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as n,o as r,c as s,a as e,b as o,d as c,f as d}from"./app-HHaGRXeI.js";const i={},u=e("h1",{id:"django自定义认证",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#django自定义认证","aria-hidden":"true"},"#"),o(" Django自定义认证")],-1),h={href:"https://zhuanlan.zhihu.com/p/415424659",target:"_blank",rel:"noopener noreferrer"},_=d("<p>重点是通过重写 <code>from django.contrib.auth.backends import BaseBackend</code> 的 <code>authenticate</code> 和 <code>get_user</code> 方法实现</p><p>可以参考 <code>ModelBackend</code> 写法，Django <code>AbstractUser(AbstractBaseUser, PermissionsMixin)</code> 中的 <code>PermissionsMixin</code> 便是调用了其中的 验权方法，2者有着较高的耦合。</p><p>request.user 由 auth.get_user() 维护最上层 session 验证，auth.login 通过调用该函数实现 request.user，可通过重写 auth.get_user auth.login auth.logout 等函数实现</p>",3);function l(p,m){const t=n("ExternalLinkIcon");return r(),s("div",null,[u,e("p",null,[e("a",h,[o("django中request.user的由来 - 知乎 (zhihu.com)"),c(t)])]),_])}const x=a(i,[["render",l],["__file","django-auth.html.vue"]]);export{x as default};
