import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as i,c as d,f as l}from"./app-HHaGRXeI.js";const c={},o=l('<h1 id="vim-intro" tabindex="-1"><a class="header-anchor" href="#vim-intro" aria-hidden="true">#</a> Vim Intro</h1><blockquote><p>Vim是Vi的增强版本，在不正式的情况下，两者是一回事。</p><p>Vim是所有UNIX和Linux系统下的标准软件。</p></blockquote><h3 id="两种模式-编辑和保存" tabindex="-1"><a class="header-anchor" href="#两种模式-编辑和保存" aria-hidden="true">#</a> 两种模式/编辑和保存</h3><ul><li><p><code>vim file</code> : 对文件用vim编辑器进行编辑。如果文件不存在，Vim将自动创建文件。</p><ul><li><code>vim</code> : 不带参数的vim自动打开编辑器。</li></ul></li><li><p>vim分为 插入 和 命令 两种模式，启动时自动处于命令模式。</p><ul><li>按 <code>I</code> 键进入<strong>插入模式</strong>，此模式下可以输入字符;</li><li>按 <code>Esc</code> 键进入<strong>命令模式</strong>，此模式下执行除了字符操作以外的所有操作，包括保存、搜索、移动光标等。</li></ul></li><li><p>命令模式下，输入 <code>:</code> 在底部打开一个命令行，此时光标闪烁输入，等待用户输入。</p></li><li><p><code>H、J、K、L</code> : 分别代表向左、下、上、右移动。当然使用方向键也是可以的。</p></li><li><p><code>O</code> : 在当前行下插入一行空白行。</p></li><li><p><code>w</code> : 保存，</p></li><li><p><code>q</code> : 退出，</p></li><li><p><code>wq</code> : 保存且退出，</p></li><li><p><code>q!</code> : 强制退出。</p></li></ul><h3 id="搜索字符串" tabindex="-1"><a class="header-anchor" href="#搜索字符串" aria-hidden="true">#</a> 搜索字符串</h3><ul><li><p><code>/string</code> : 用于搜索一个字符串，输入 <code>/</code> 后，vim底部也会出现一个命令行。</p></li><li><p>vim的搜索可以循环进行，<code>/</code> 命令向前(文件尾)查找，<code>?</code> 命令向后(向文件头)查找。</p></li><li><p>对大小写是否敏感：</p><ul><li><code>:set ignorecase</code> 命令vim忽略大小写;</li><li><code>:set noignorecase</code> 命令vim重新开启大小写敏感。</li></ul></li></ul><h3 id="替换字符串" tabindex="-1"><a class="header-anchor" href="#替换字符串" aria-hidden="true">#</a> 替换字符串</h3><ul><li><p><code>:[range]s/pattern/string/[c,e,g,i]</code> : 替换命令的完整语法，将匹配pattern(正则表达式)的字符串替换为string。</p><ul><li><p><code>range</code> 规定替换范围，<code>1,4</code>表示1到4行，<code>1,$</code> 表示1行到最后一行(全文)，<code>%</code>也表示全文。</p></li><li><p>最后方括号内的字符是可选选项，选项含义如下：</p><table><thead><tr><th style="text-align:center;">标志</th><th style="text-align:center;">含义</th></tr></thead><tbody><tr><td style="text-align:center;">c</td><td style="text-align:center;">每次替换前询问</td></tr><tr><td style="text-align:center;">e</td><td style="text-align:center;">不显示错误信息</td></tr><tr><td style="text-align:center;">g</td><td style="text-align:center;">替换一行中的所有匹配项（通常需要使用,否则替换第一项）</td></tr><tr><td style="text-align:center;">i</td><td style="text-align:center;">不区分大小写</td></tr></tbody></table></li></ul></li><li><p><code>*</code> 清除文本文件中的 <code>^M</code> 字符：由于来自windows环境的源代码对换行符的表述和Linux不一致，因此文末常出现 <code>^M</code> 符号——虽然对程序编译器和解释器没有影响，但在shell编程时会产生问题，此时用 <code>%s/^M$//g</code> 删除行末的 <code>^M</code> 字符。</p></li></ul><h3 id="针对程序员的配置" tabindex="-1"><a class="header-anchor" href="#针对程序员的配置" aria-hidden="true">#</a> 针对程序员的配置</h3><ul><li><p>一些常用的配置命令：</p><ul><li><code>:syntax on</code>打开语法高亮，vim会根据文件扩展名决定哪些为关键字。</li><li><code>:set autoindent</code>设置自动缩进;</li><li><code>:set shiftwidth=4</code>设置自动缩进的空白长度;</li><li><code>:set tabstop=4</code>将tab键缩进设置为4个空格。</li></ul></li><li><p>为避免每次启动vim都要手动输入命令，可以将命令写入vim的配置文件中(文件中不要包含 <code>:</code>)，vim的配置文件为 <code>/etc/vim/vimrc</code> ( <code>/etc</code> 中的文件对系统中所有用户生效)，推荐用户可以新建一个 <code>~/.vimrc</code> 文件在其中写入配置信息，只对当前用户生效。</p><ul><li>通常用户个性化的设置文件都是隐藏文件 ( <code>.</code> 开头的文件 )，且保存在用户主目录下。</li></ul></li></ul><h3 id="vim的常用命令总结" tabindex="-1"><a class="header-anchor" href="#vim的常用命令总结" aria-hidden="true">#</a> Vim的常用命令总结</h3><ul><li><p>模式切换：</p><ul><li><code>a</code> : 在光标后插入;</li><li><code>i</code> : 在光标所在位置插入;</li><li><code>o</code> : 在光标所在位置下一行插入;</li><li><code>Esc</code> : 进入命令模式;</li><li><code>:</code> : 进入行命令模式。</li></ul></li><li><p>光标移动(名列前加上数字，可以重复多次移动，如 <code>5w</code> )：</p><ul><li><code>h</code>/<code>l</code>/<code>j</code>/<code>k</code> : 光标向左/右/上/下移动;</li><li><code>^</code>/<code>$</code> : 移动光标到行首/尾;</li><li><code>gg</code>/<code>shift+g</code> : 移动光标到文件首/尾;</li><li><code>w</code>/<code>b</code> : 移动到下一个/上一个单词;</li><li><code>ctrl+f</code>/<code>ctrl+b</code> : 向前(文件尾)/后(文件头)翻动一页。</li></ul></li><li><p>删除、复制和粘贴：</p><ul><li><code>x</code> : 删除光标所在位置的字符;</li><li><code>dd</code> : 删除光标所在行;</li><li><code>shift+d</code> : 删除光标所在位置到行尾的所有字符;</li><li><code>d</code> : 和移动命令配合使用的删除命令，如 <code>dw</code> 表示删除光标所在位置到下一个单词之间的所有字符;</li><li><code>yy</code> : 复制光标所在行;</li><li><code>y</code> : 和移动命令配合使用的复制命令;</li><li><code>shift+p</code> : 在光标所在位置粘贴最近复制/删除的内容。</li></ul></li><li><p>撤销和重做：</p><ul><li><code>u</code> : 撤销一次操作;</li><li><code>ctrl+r</code> : 重做被撤销的操作。</li></ul></li><li><p>搜索和替换：</p><ul><li><code>:/string</code> : 向前搜索字符串string;</li><li><code>:?string</code> : 向后搜索字符串string;</li><li><code>:s/pattern/string</code> : 将pattern代表的字符串替换成string。</li></ul></li><li><p>保存和退出：</p><ul><li><code>:w</code> : 保存文件;</li><li><code>:w filename</code> : 另存为filename;</li><li><code>:q</code> : 退出vim;</li><li><code>:!q</code> : 强制退出，放弃保存修改。</li></ul></li></ul>',12),t=[o];function r(a,n){return i(),d("div",null,t)}const h=e(c,[["render",r],["__file","Vim.html.vue"]]);export{h as default};
