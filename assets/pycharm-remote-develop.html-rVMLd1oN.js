import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as t,c as a,f as o}from"./app-HHaGRXeI.js";const i={},n=o(`<h1 id="pycharm-远程开发" tabindex="-1"><a class="header-anchor" href="#pycharm-远程开发" aria-hidden="true">#</a> Pycharm 远程开发</h1><p>pycharm的远程开发，关键在于配置远程解释器，在配置远程解释器时需要选择远程映射目录，默认为<code>/tmp/pycharm_project_xxx</code>，其中保存的便是本地项目的远程同步文件，如果不需要将本地文件在服务区同步保留可以不更改，如果需要在远程服务器也保存文件则需要将其修改到指定远程文件夹，及下图的同步文件夹后半部。</p><figure><img src="https://raw.githubusercontent.com/ET-yzk/picgo/blog/image-20230926115713721.png" alt="image-20230926115713721" tabindex="0"><figcaption>image-20230926115713721</figcaption></figure><p>在“配置远程解释器”完成后，便会在“工具--&gt;部署”中添加远程主机配置，此时选中的远程主机才是适配<strong>当前远程解释器</strong>的。</p><figure><img src="https://raw.githubusercontent.com/ET-yzk/picgo/blog/image-20230926120236824.png" alt="image-20230926120236824" tabindex="0"><figcaption>image-20230926120236824</figcaption></figure><p>也即远程开发的关键在于 <strong>远程主机部署路径与远程解释器同步文件夹</strong>的对应（上图的远程主机是在添加远程解释器指定来如上同步文件夹后默认创建的，且当前选中配置的远程主机为左上角的✅），否则会报错如下。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>Cannot <span class="token function">find</span> remote credentials <span class="token keyword">for</span> target config com.jetbrains.plugins.remotesdk.target.webDeployment.WebDeploymentTargetEnvironmentConfiguration
</code></pre></div><figure><img src="https://raw.githubusercontent.com/ET-yzk/picgo/blog/image-20230926115318549.png" alt="image-20230926115318549" tabindex="0"><figcaption>image-20230926115318549</figcaption></figure><p>如上图，正确配置后的情况，部署上部分选项都会点亮。</p>`,9),r=[n];function c(g,s){return t(),a("div",null,r)}const l=e(i,[["render",c],["__file","pycharm-remote-develop.html.vue"]]);export{l as default};
