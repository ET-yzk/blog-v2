const t=JSON.parse('{"key":"v-7087cdd3","path":"/daily/Thread-safety.html","title":"线程安全","lang":"zh-CN","frontmatter":{"icon":"b fa-simplybuilt","category":"天天笔记","date":"2022-02-13T00:00:00.000Z","tag":["OS"],"description":"线程安全 线程安全是多线程编程时的计算机程序代码中的一个概念。在拥有共享数据的多条线程并行执行的程序中，线程安全的代码会通过同步机制保证各个线程都可以正常且正确的执行，不会出现数据污染[1]等意外情况。 如果一个函数能够安全地同时被多个线程调用而得到正确的结果，那么，我们说这个函数是线程安全的。所谓\\"安全\\"，一切可能导致结果不正确的因素都是不安全的调用。","head":[["meta",{"property":"og:url","content":"https://blog.yzketx.online/daily/Thread-safety.html"}],["meta",{"property":"og:site_name","content":"ET-yzk 🌱"}],["meta",{"property":"og:title","content":"线程安全"}],["meta",{"property":"og:description","content":"线程安全 线程安全是多线程编程时的计算机程序代码中的一个概念。在拥有共享数据的多条线程并行执行的程序中，线程安全的代码会通过同步机制保证各个线程都可以正常且正确的执行，不会出现数据污染[1]等意外情况。 如果一个函数能够安全地同时被多个线程调用而得到正确的结果，那么，我们说这个函数是线程安全的。所谓\\"安全\\"，一切可能导致结果不正确的因素都是不安全的调用。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-06T16:35:04.000Z"}],["meta",{"property":"article:author","content":"kfkfka zkye"}],["meta",{"property":"article:tag","content":"OS"}],["meta",{"property":"article:published_time","content":"2022-02-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-06T16:35:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线程安全\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-02-13T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-06T16:35:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"kfkfka zkye\\",\\"url\\":\\"https://blog.yzketx.online/\\"}]}"],["link",{"rel":"alternate","type":"application/json","href":"https://blog.yzketx.online/feed.json","title":"ET-yzk 🌱 JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://blog.yzketx.online/rss.xml","title":"ET-yzk 🌱 RSS Feed"}]]},"headers":[{"level":2,"title":"意义","slug":"意义","link":"#意义","children":[]}],"git":{"createdTime":1646214189000,"updatedTime":1678120504000,"contributors":[{"name":"zkye","email":"yzket@foxmail.com","commits":3}]},"readingTime":{"minutes":1.08,"words":325},"filePathRelative":"daily/Thread-safety.md","localizedDate":"2022年2月13日","excerpt":"<h1> 线程安全</h1>\\n<blockquote>\\n<p>线程安全是多线程编程时的计算机程序代码中的一个概念。在拥有共享数据的多条线程并行执行的程序中，线程安全的代码会通过同步机制保证各个线程都可以正常且正确的执行，不会出现<strong>数据污染</strong><sup class=\\"footnote-ref\\"><a href=\\"#footnote1\\">[1]</a><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\"></a></sup><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\">等意外情况。</a></p><a class=\\"footnote-anchor\\" id=\\"footnote-ref1\\">\\n<p>如果一个函数能够安全地同时被多个线程调用而得到正确的结果，那么，我们说这个函数是线程安全的。所谓\\"安全\\"，一切可能导致结果不正确的因素都是不安全的调用。</p>\\n</a></blockquote>","copyright":{"author":"kfkfka zkye"},"autoDesc":true}');export{t as data};
