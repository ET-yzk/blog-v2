import{_ as n}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as i,f as e}from"./app-HHaGRXeI.js";const r={},o=e('<h1 id="负载均衡分类" tabindex="-1"><a class="header-anchor" href="#负载均衡分类" aria-hidden="true">#</a> 负载均衡分类</h1><blockquote><p>Nginx 与 SpringCloud 的 Ribbon 对比：</p><ul><li>Nginx 做的是客户端范围访问请求的负载均衡，负责将客户端请求代理转发给服务器。</li><li>Ribbon 做的是 SpringCloud 内部微服务之间访问的负载均衡，该请求源自 完成某用户请求而需要调用的内部微服务。</li></ul></blockquote><h2 id="客户端负载均衡器" tabindex="-1"><a class="header-anchor" href="#客户端负载均衡器" aria-hidden="true">#</a> 客户端负载均衡器</h2><p>在SpringCloud中Ribbon负载均衡客户端，会从eureka注册中心服务器端上获取服务注册信息列表，缓存到本地。</p><p>让后在本地实现轮训负载均衡策略。</p><h3 id="ribbon与nginx区别" tabindex="-1"><a class="header-anchor" href="#ribbon与nginx区别" aria-hidden="true">#</a> Ribbon与Nginx区别</h3><h4 id="_1-服务器端负载均衡nginx" tabindex="-1"><a class="header-anchor" href="#_1-服务器端负载均衡nginx" aria-hidden="true">#</a> 1.服务器端负载均衡Nginx</h4><p>nginx是客户端所有请求统一交给nginx，由nginx进行实现负载均衡请求转发，属于服务器端负载均衡。</p><p>既请求有nginx服务器端进行转发。</p><h4 id="_2-客户端负载均衡ribbon" tabindex="-1"><a class="header-anchor" href="#_2-客户端负载均衡ribbon" aria-hidden="true">#</a> 2.客户端负载均衡Ribbon</h4><p>Ribbon是从eureka注册中心服务器端上获取服务注册信息列表，缓存到本地，让后在本地实现轮训负载均衡策略。</p><p>既在客户端实现负载均衡。</p><h4 id="应用场景的区别" tabindex="-1"><a class="header-anchor" href="#应用场景的区别" aria-hidden="true">#</a> 应用场景的区别：</h4><p>Nginx适合于服务器端实现负载均衡 比如Tomcat ，Ribbon适合与在微服务中RPC远程调用实现本地服务负载均衡，比如Dubbo、SpringCloud中都是采用本地负载均衡。</p><p>Ribbon是Spring Cloud （本地）客户端负载均衡器</p>',15),d=[o];function h(t,b){return a(),i("div",null,d)}const p=n(r,[["render",h],["__file","LoadBalance.html.vue"]]);export{p as default};
